<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwExceptions="false"
      internalLogLevel="Off" internalLogFile="c:\temp\nlog-internal.log">

  <!-- optional, add some variables
  https://github.com/nlog/NLog/wiki/Configuration-file#variables
  -->
  <variable name="myvar" value="myvalue"/>

  <!--
  See https://github.com/nlog/nlog/wiki/Configuration-file
  for information on customizing logging rules and outputs.
   -->
  <targets>
    <!-- This snippet allows NLog-based application to transmit its log messages to Sentinel log viewer -->
    <target xsi:type="NLogViewer"
        name="viewer"
        address="udp://127.0.0.1:9999"/>

    <!-- This snippet allows writing log messages to the file -->
    <target name="logfile"
            xsi:type="File"
            fileName="${basedir}/logs/${shortdate}.log"
            layout="${longdate} ${uppercase:${level}} ${message}" />

    <!-- This snippet writes log messages to the console -->
    <target name="console"
            xsi:type="Console" />

    <!-- This snippet writes log messages to the EventLog -->
    <target xsi:type="EventLog"
            name="asyncFile"
            layout="${message}"
            machineName="."
            source="NLogPOC"
            log="Application" />

    <target name="file"
            xsi:type="File"
            layout="${longdate} ${logger} ${message}"
            fileName="${basedir}/logs/logfile.txt"
            archiveFileName="${basedir}/archives/${machinename}-${processname:fullName=false}${date:format=yyyyMMdd}-${windows-identity:userName=true:domain=false}-{#####}.txt"
            archiveAboveSize="500"
            archiveNumbering="Sequence"
            concurrentWrites="true"
            keepFileOpen="false"
            encoding="iso-8859-2" />

    <!--
      <target name="file" xsi:type="File"
          layout="${longdate} ${logger} ${message}"
          fileName="${basedir}/logs/logfile.txt"
          archiveFileName="${basedir}/${longdate}.${machinename}.${windows-identity}.${processname}${#}.txt"
          archiveAboveSize="500"
          archiveNumbering="Sequence"
          concurrentWrites="true"
          keepFileOpen="false"
          encoding="iso-8859-2" />
    
    -->

    <!--
    add your targets here
    See https://github.com/nlog/NLog/wiki/Targets for possible targets.
    See https://github.com/nlog/NLog/wiki/Layout-Renderers for the possible layout renderers.
    -->

    <!--
    Write events to a file with the date in the filename.
    <target xsi:type="File" name="f" fileName="${basedir}/logs/${shortdate}.log"
            layout="${longdate} ${uppercase:${level}} ${message}" />
    -->
  </targets>

  <rules>
    <!-- This rule allows NLog-based application to transmit its log messages to Sentinel log viewer -->
    <logger name="*"
        minlevel="Debug"
        writeTo="viewer" />

    <!-- This rule includes all logs of level Info or higher (which includes Info, Warn, Error, and Fatal) to a target named logfile -->
    <logger name="*"
            minlevel="Info"
            writeTo="logfile" />

    <!-- 
    The first rule will send logs from loggers whose name begin with SomeNamespace.Component and where level is Trace or higher to the log file
    The attribute final="true" will cause further processing to be stopped after performing the write 
    -->
    <logger name="SomeNamespace.Component.*"
            minlevel="Trace"
            writeTo="logfile"
            final="true" />
    <!-- The second rule will send all remaining logs to the same log file with the restriction that the level must be Info or higher -->
    <logger name="*"
            minlevel="Info"
            writeTo="logfile" />

    <!-- Rules for console messages -->
    <logger name="*"
            minlevel="Info"
            writeTo="console" />

    <!-- Rules for EventLog messages -->
    <logger name="*"
            minlevel="Debug"
            writeTo="asyncFile" />

    <logger name="*" minlevel="Debug" writeTo="file" />


    <!--
    Write all events with minimal level of Debug (So Debug, Info, Warn, Error and Fatal, but not Trace)  to "f"
    <logger name="*" minlevel="Debug" writeTo="f" />
    -->
  </rules>
</nlog>

